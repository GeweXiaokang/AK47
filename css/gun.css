/*
举个例子，如果你有一个容器，并且你设置了如下的网格定义：

.container {
  display: grid;
  grid-template-columns: 1fr 2fr;
  grid-template-rows: 100px 1fr;
}
这将会创建一个两列的网格，第一列宽度是第二列的一半（因为第二列分配了2份空间）。同时，这个网格有两行，第一行高度固定为100px，第二行占据剩余的空间。

总的来说，fr 单位提供了一个非常强大和灵活的方式来创建动态尺寸的网格布局，它可以自适应容器的大小变化。
*/

body::-webkit-scrollbar {
    display: none; /* 对于 Safari 和 Chrome */
}

body {
    -ms-overflow-style: none; /* 对于 IE10+ */
    scrollbar-width: none; /* 对于 Firefox */
}
main {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    /* 创建两列，每列分配1份空间 */ 
    grid-template-rows: 1fr 1fr 1fr 1fr;
    /* 创建两行，每行分配1份空间 */
    height: 100vh;
    /* 容器高度设置为视口的100% */
    width: 100vw;
    /* 容器宽度设置为视口的100% */
    background-color: rgb(168, 168, 168);

}

#main1 {
    grid-column: 1 / 2;
    /* 定位在第一列 */
    grid-row: 1 / 3;
    /* 定位在第一行 */
}

#main2 {
    grid-column: 1 / 2;
    /* 定位在第一列 */
    grid-row: 3/ 5;
    /* 定位在第二行 */
}
#main3 {
    grid-column: 2 / 3;
    /* 定位在第一列 */
    grid-row: 3/ 5;
    /* 定位在第二行 */
}
#main4 {
    grid-column: 3 / 4;
    /* 定位在第一列 */
    grid-row: 1/ 4;
    /* 定位在第二行 */
}
#wenzi{
    grid-column: 2 / 3;
    /* 定位在第一列 */
    grid-row: 1 / 2;
    /* 定位在第三行 */
    display: flex; /* 使用 flex 布局 */
    justify-content: center; /* 水平居中 */
    align-items: center; /* 垂直居中 */
    overflow: hidden; /* 如果图片超出 div 容器，将不会显示超出部分 */
}
#wenzi .image_wenzi {
    width: 100%; /* 设置图片宽度为 div 的宽度 */
    height: 100%; /* 设置图片高度为 div 的高度 */
 
    object-position: center center; /* 图片居中 */
  }

#guns_3D {
    grid-column: 2 / 3;
    /* 定位在第二列 */
    grid-row: 1/ 3;
    /* 定位在第一行 */
    background-image: url('../img/BAM2.jpeg');
    background-size: cover;
}

#guns_3D model-viewer {
    width: 100%;
    /* 宽度设置为包含它的父元素的100% */
    height: 100%;
    /* 高度设置为包含它的父元素的100% */
}

main>a {
    grid-column: 3 / 4;
    /* 定位在第二列 */
    grid-row: 4 / 5;
    /* 定位在第二行 */
}

/* 可选：如果你想要有间隙 */

main {
    gap: 10px; /* 设置网格线之间的间隙 */
}

/* 可选：添加一些样式以便更清晰地看到每个区域的分界 */
main > div, main > a {
    border: 1px solid #000; /* 添加边框 */
    display: flex;
    align-items: center;
    justify-content: center;
}
